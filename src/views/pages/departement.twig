{% extends "layout.twig" %}

{% block content %}
    <div class="d-block">
        <h1>Bilan du départemental : {{ departement.nomdep }}</h1>
        <div>Ces graphes indiquent l'état de l'épidémie au niveau départemental. Vous pouvez voir le détail des valeurs en glissant votre curseur sur les zones souhaitées</div>
        <hr>
        <div id="bilan-national" class="bilan">
            <div class="graph">
                <canvas id="bilan_etat_epidemie"></canvas>
            </div>
            <div class="graph">
                <canvas id="bilan_sexe"></canvas>
            </div>
            <div class="graph">
                <canvas id="bilan_etat_sante"></canvas>
            </div
            ><div class="graph">
                <canvas id="bilan_age"></canvas>
            </div>
        </div>
    </div>

    <h1> Liste des personnes confinés dans le département {{ departement.nomdep }}</h1>
    <HR>
    {% if not patients %}
        <div> Il n'y a aucun patient confinés dans ce départemnt</div>
    {% else %}
        <h1> Rechercher des patients </h1>
        <div class="form-row pb-5 pt-1">
            <div class="col-10 m-auto">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <select id="select-recherche-patient" name="oCategorie" class="form-control">
                            <option selected="selected" value="0">Nom/Prenom</option>
                            <option value="1">Numéro de sécurité</option>
                        </select>
                    </div>
                    <input id="rechercher-patient" name="oSaisie" type="text" class="form-control" aria-label="Saisie de mots clés">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">Recherche</button>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
    <div id="liste-patients">
        {% for patient in patients %}
            <div class="mb-3 p-2 patient">
                <div class="col-10 info-patient">
                    <div data-num_secu="{{ patient.num_secu }}" class="nom-patient">{{ patient.nom }}</div>
                    <div class="prenom-patient">{{ patient.prenom }}</div>
                    <div class="num-patient">[{{ patient.num_tel }}]</div>
                    <div class="info-etat-sante
                        {% if patient.etat_sante == 'fièvre et pb respiratoires' %} sante-fievre-pb-resp
                        {% elseif patient.etat_sante == 'fièvre' %} sante-fievre
                        {% elseif patient.etat_sante == 'inconscient' %} sante-inconscient
                        {% elseif patient.etat_sante == 'décédé' %} sante-mort
                        {% elseif patient.etat_sante == 'aucun symptome' %} sante-aucun-sympt
                        {% endif %}
                        "> {{ patient.etat_sante }}
                    </div>
                </div>
                <div class="col-2 controls">
                    <a href="{{ path_for('voirPatient', {numsecu: patient.num_secu}) }}" class="">
                        <svg xmlns="http://www.w3.org/2000/svg" id="Capa_1" enable-background="new 0 0 524.235 524.235"
                             height="512px" viewBox="0 0 524.235 524.235" width="512px" class="icon">
                            <g>
                                <path d="m262.118 0c-144.53 0-262.118 117.588-262.118 262.118s117.588 262.118 262.118 262.118 262.118-117.588 262.118-262.118-117.589-262.118-262.118-262.118zm17.05 417.639c-12.453 2.076-37.232 7.261-49.815 8.303-10.651.882-20.702-5.215-26.829-13.967-6.143-8.751-7.615-19.95-3.968-29.997l49.547-136.242h-51.515c-.044-28.389 21.25-49.263 48.485-57.274 12.997-3.824 37.212-9.057 49.809-8.255 7.547.48 20.702 5.215 26.829 13.967 6.143 8.751 7.615 19.95 3.968 29.997l-49.547 136.242h51.499c.01 28.356-20.49 52.564-48.463 57.226zm15.714-253.815c-18.096 0-32.765-14.671-32.765-32.765 0-18.096 14.669-32.765 32.765-32.765s32.765 14.669 32.765 32.765c0 18.095-14.668 32.765-32.765 32.765z"
                                      data-original="#000000" class="active-path" data-old_color="#000000" fill="#747E86"/>
                            </g>
                        </svg>

                        <a href="{{ path_for('hospitaliserPatient', {numsecu: patient.num_secu}) }}" class="">
                            <?xml version="1.0"?>
                            <svg class="icon" xmlns="http://www.w3.org/2000/svg"
                                 xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px"
                                 viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve"
                                 width="512px" height="512px"><g>
                                    <g>
                                        <g>
                                            <path d="M469.333,106.667H362.667V85.333c0-23.531-19.135-42.667-42.667-42.667H192c-23.531,0-42.667,19.135-42.667,42.667v21.333    H42.667C19.135,106.667,0,125.802,0,149.333v277.333c0,23.531,19.135,42.667,42.667,42.667h426.667    c23.531,0,42.667-19.135,42.667-42.667V149.333C512,125.802,492.865,106.667,469.333,106.667z M192,85.333h128v21.333H192V85.333z     M362.667,330.667c0,5.896-4.771,10.667-10.667,10.667h-53.333v53.333c0,5.896-4.771,10.667-10.667,10.667h-64    c-5.896,0-10.667-4.771-10.667-10.667v-53.333H160c-5.896,0-10.667-4.771-10.667-10.667v-64c0-5.896,4.771-10.667,10.667-10.667    h53.333v-53.333c0-5.896,4.771-10.667,10.667-10.667h64c5.896,0,10.667,4.771,10.667,10.667V256H352    c5.896,0,10.667,4.771,10.667,10.667V330.667z"
                                                  data-original="#000000" class="active-path" data-old_color="#000000"
                                                  fill="#778086"/>
                                        </g>
                                    </g>
                                </g>
                        </svg>
                        </a>
                    </a>
                </div>
            </div>
        {% endfor %}
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script>
        Chart.defaults.global.title.display =true;
        Chart.defaults.global.maintainAspectRatio = false;
        var ctx = document.getElementById('bilan_etat_epidemie').getContext('2d');
        ctx.canvas.width = 300;
        ctx.canvas.height = 300;
        var chart_etat_epidemeie = new Chart(ctx, {
            // The type of chart we want to create
            type: 'doughnut',
            // The data for our dataset
            data: {
                labels: ['Guéri', 'Mort', 'Confiné', 'Hospitalisé'],
                datasets: [{
                    label: 'Stats_etat_nation',
                    backgroundColor: [
                        'rgba(46, 204, 113,0.4)',
                        'rgba(149, 165, 166,0.4)',
                        'rgba(241, 196, 15,0.4)',
                        'rgba(231, 76, 60,0.4)',
                    ],
                    borderColor: [
                        'rgb(46, 204, 113)',
                        'rgb(149, 165, 166)',
                        'rgb(241, 196, 15)',
                        'rgb(231, 76, 60)',
                    ],
                    data: [{{bilan.statut.gueri}}, {{bilan.statut.mort}}, {{bilan.statut.confine}}, {{bilan.statut.hospitalise}}]
                }]
            },

            // Configuration options go here
            options: {
                title :{
                    text: "Etat de l\'épidémie dans le département : {{ departement.nomdep }}"
                },

            }
        });

        ctx = document.getElementById('bilan_sexe').getContext('2d');
        ctx.canvas.width = 300;
        ctx.canvas.height = 300;
        var chart_sexe = new Chart(ctx, {
            // The type of chart we want to create
            type: 'pie',
            // The data for our dataset
            data: {
                labels: ['Homme', 'Femme'],
                datasets: [{
                    label: 'Stats_etat_nation',
                    backgroundColor: [
                        'rgba(52, 152, 219,0.4)',
                        'rgba(231, 76, 60,0.4)',
                    ],
                    borderColor: [
                        'rgba(52, 152, 219,1.0)',
                        'rgb(231, 76, 60)',
                    ],
                    data: [{{bilan.sexe.M}}, {{bilan.sexe.F}}]
                }]
            },
            // Configuration options go here
            options: {
                title :{
                    text: "Population surveillé en fonction de leur sexe"
                }
            }
        });

        ctx = document.getElementById('bilan_etat_sante').getContext('2d');
        ctx.canvas.width = 300;
        ctx.canvas.height = 300;
        var chart_etat_sante = new Chart(ctx, {
            // The type of chart we want to create
            type: 'doughnut',
            // The data for our dataset
            data: {
                labels: ['fièvre et pb respiratoires', 'fièvre', 'aucun symptome', 'inconscient'],
                datasets: [{
                    label: 'Stats_etat_nation',
                    backgroundColor: [
                        'rgba(230, 126, 34,0.4)',
                        'rgba(241, 196, 15,0.4)',
                        'rgba(46, 204, 113,0.4)',
                        'rgba(231, 76, 60,0.4)',
                    ],
                    borderColor: [
                        'rgb(230, 126, 34,1.0)',
                        'rgb(241, 196, 15)',
                        'rgb(46, 204, 113)',
                        'rgb(231, 76, 60)',
                    ],
                    data: [{{bilan.etat_sante.fievre_pb_resp}}, {{bilan.etat_sante.fievre}}, {{bilan.etat_sante.aucun_symp}}, {{bilan.etat_sante.inconscient}}]
                }]
            },
            // Configuration options go here
            options: {
                title :{
                    text: "Population surveillé en fonction de leur etat de santé"
                }
            }
        });


        ctx = document.getElementById('bilan_age').getContext('2d');
        ctx.canvas.width = 300;
        ctx.canvas.height = 300;
        var chart_age = new Chart(ctx, {
            // The type of chart we want to create
            type: 'bar',
            // The data for our dataset
            data: {
                labels: [' -15 ans', 'entre 15 et 44 ans', 'entre 45 et 64 ans', 'entre 65 et 75','plus de 75'],
                datasets: [{
                    label: 'age',
                    backgroundColor: [
                        'rgba(46, 204, 113,0.6)',
                        'rgba(149, 165, 166,0.6)',
                        'rgba(241, 196, 15,0.6)',
                        'rgba(231, 76, 60,0.6)',
                        'rgba(52, 152, 219,0.6)',
                    ],
                    data: [{{bilan.age.moins_15}}, {{bilan.age._15_44}}, {{bilan.age._45_64}}, {{bilan.age._65_74}}, {{bilan.age.plus_75}}]
                }]
            },
            // Configuration options go here
            options: {
                title :{
                    text: "Population surveillé en fonction de leur age"
                },
                legend:{
                    visible: false
                }
            }
        });
    </script>
{% endblock %}
